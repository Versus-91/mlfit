{"version":3,"file":"js/221.f059f443.js","mappings":"YAQAA,eAAeC,IAEbC,KAAKC,cAAgBC,oBACfF,KAAKC,QAAQE,YAAY,CAAC,QAAS,cAAe,UAC1D,CANAC,cAAc,4DAOd,IAAIC,EAAsBN,IAE1BC,KAAKM,UAAYR,gBAETO,EAEN,MAAM,GAAEE,EAAE,OAAEC,KAAWC,GAAYC,EAAMC,KAEzC,IAAK,MAAMC,KAAOC,OAAOC,KAAKL,GAC5BT,KAAKY,GAAOH,EAAQG,GAGtB,UACQZ,KAAKC,QAAQc,wBAAwBP,GAC3C,IAAIQ,QAAgBhB,KAAKC,QAAQgB,eAAeT,GAChD,MAAMU,EAASF,EAAQG,OACvBnB,KAAKoB,YAAY,CAAEJ,QAASE,EAAQX,MACtC,CAAE,MAAOc,GACPrB,KAAKoB,YAAY,CAAEC,MAAOA,EAAMC,QAASf,MAC3C,E","sources":["webpack://mlfit/./src/helpers/webworker.js"],"sourcesContent":["// webworker.js\r\n\r\n// Setup your project to serve `py-worker.js`. You should also serve\r\n// `pyodide.js`, and all its associated `.asm.js`, `.json`,\r\n// and `.wasm` files as well:\r\n// eslint-disable-next-line no-undef\r\nimportScripts(\"https://cdn.jsdelivr.net/pyodide/v0.24.1/full/pyodide.js\");\r\n\r\nasync function loadPyodideAndPackages() {\r\n  // eslint-disable-next-line no-undef\r\n  self.pyodide = await loadPyodide();\r\n  await self.pyodide.loadPackage([\"numpy\", \"statsmodels\", \"pandas\"]);\r\n}\r\nlet pyodideReadyPromise = loadPyodideAndPackages();\r\n\r\nself.onmessage = async (event) => {\r\n  // make sure loading is done\r\n  await pyodideReadyPromise;\r\n  // Don't bother yet with this line, suppose our API is built in such a way:\r\n  const { id, python, ...context } = event.data;\r\n  // The worker copies the context in its own \"memory\" (an object mapping name to values)\r\n  for (const key of Object.keys(context)) {\r\n    self[key] = context[key];\r\n  }\r\n  // Now is the easy part, the one that is similar to working in the main thread:\r\n  try {\r\n    await self.pyodide.loadPackagesFromImports(python);\r\n    let results = await self.pyodide.runPythonAsync(python);\r\n    const result = results.toJs()\r\n    self.postMessage({ results: result, id });\r\n  } catch (error) {\r\n    self.postMessage({ error: error.message, id });\r\n  }\r\n};"],"names":["async","loadPyodideAndPackages","self","pyodide","loadPyodide","loadPackage","importScripts","pyodideReadyPromise","onmessage","id","python","context","event","data","key","Object","keys","loadPackagesFromImports","results","runPythonAsync","result","toJs","postMessage","error","message"],"sourceRoot":""}